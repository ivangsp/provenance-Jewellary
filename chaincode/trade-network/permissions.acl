/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule ParticipantsSeeSelves {
  	description: "Let participants see themselves"
  	participant(p): "org.hyperledger.composer.system.Participant"
  	operation: ALL
    resource(r): "org.hyperledger.composer.system.Participant"
  	condition: (r.getIdentifier() == p.getIdentifier())
  	action: ALLOW
}

rule ParticipantsSeeBanks {
  	description: "Let participants see the banks"
  	participant: "org.hyperledger.composer.system.Participant"
  	operation: READ
    resource: "org.trade.com.Bank"
  	action: ALLOW
}
rule ArtisanHasFullPermissionToTheProduct {
  description: "artisans can create|update|delete|Product they own"
  participant(p): "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource(r): "org.trade.com.Product"
  condition: (p.getIdentifier() === r.owner.getIdentifier())
  action: ALLOW
}

rule TraderCanSeeOtherTraders {
	description: "Let Traders see other Traders"
  	participant: "org.hyperledger.composer.system.Participant"
  	operation: READ
    resource: "org.trade.com.Trader"
  	action: ALLOW
}

rule EveryoneCanSeeProducts {
	description: "Everyone can see the products"
  	participant: "org.hyperledger.composer.system.Participant"
  	operation: READ
    resource: "org.trade.com.Product"
  	action: ALLOW
}

rule TraderSeeBankEmployee {
	description: "Let Traders see their BankEmployees"
  	participant(p): "org.trade.com.Trader"
  	operation: READ
    resource(r): "org.trade.com.BankEmployee"
  	condition: (r.bank.getIdentifier() == p.bank.getIdentifier())
  	action: ALLOW
}

rule BankEmployeeSeeTrader {
	description: "Let BankEmployees see their Traders"
  	participant: "org.trade.com.BankEmployee"
  	operation: READ
    resource: "org.trade.com.Trader"
  	action: ALLOW
}

rule BankEmployeeSeeBankEmployee {
  description: "Let BankEmployees see their colleagues"
  participant(p): "org.trade.com.BankEmployee"
  operation: READ
  resource(r): "org.trade.com.BankEmployee"
  condition: (r.bank.getIdentifier() == p.bank.getIdentifier())
  action: ALLOW
}

rule OnlyArtisanCanCreateProduct {
  description: "Only Traders of category Artisan are allowed to create product"
  participant(p): "org.trade.com.Trader"
  operation: ALL
  resource: "org.trade.com.Product"
  condition: (p.category == "ARTISAN")
  action: ALLOW
}

rule BankEmployeeCanTransferOwnershipOfProduct {
  description: "Bank employee can transfer ownership of a product"
  participant(p): "org.trade.com.BankEmployee"
  operation: UPDATE
  resource(r): "org.trade.com.Product"
  condition: (p.bank.getIdentifier()  == r.owner.bank.getIdentifier())
  action: ALLOW
}


rule OnlyArtisanCanCreateProductCategory {
  description: "Only Traders of category Artisan are allowed to create a product category"
  participant(p): "org.trade.com.Trader"
  operation: ALL
  resource: "org.trade.com.ProductCategory"
  condition: (p.category == "ARTISAN")
  action: ALLOW
  
}

rule OnlyTradersCanMakeTradeRequest {
  description: "All traders can request for a trade"
  participant(p): "org.trade.com.Trader"
  operation: CREATE
  resource: "org.trade.com.InitialTradeRequest"
  condition: (p.category === "TRADER")
  action: ALLOW
}

rule TraderCanCreateTradeAgreement {
  description: "All traders can create a trade agreement"
  participant(p): "org.trade.com.Trader"
  operation: CREATE
  resource: "org.trade.com.TradeAgreement"
  transaction: "org.trade.com.InitialTradeRequest"
  condition: (p.category === "TRADER")
  action: ALLOW
}

rule TraderViewTradeAgreement{
	description: "All customers can view there tradeagreement"
  	participant(p): "org.trade.com.Trader"
  	operation: READ
    resource(r): "org.trade.com.TradeAgreement"
    condition: (p.getIdentifier() === r.buyer.getIdentifier() || p.getIdentifier() === r.seller.getIdentifier())
  	action: ALLOW
}

rule BankEmployeeCanReadTradAgreement{
	description: "Bank employees can view tradeagreement"
  	participant(p): "org.trade.com.BankEmployee"
  	operation: READ
    resource(r): "org.trade.com.TradeAgreement"
    condition: (p.bank.getIdentifier() === r.buyer.bank.getIdentifier() || p.bank.getIdentifier() === r.seller.bank.getIdentifier())
  	action: ALLOW
}

rule ApproveTradeRequest {
  description: "Only Traders of category Artisan can approve trade request of the product they own"
  participant: "org.trade.com.Trader"
  operation: CREATE
  resource: "org.trade.com.ApproveTradeRequest"
  action: ALLOW
}

rule MarkTradeRequestAsApproved {
  description: "Only Traders of category Artisan can approve trade request of the product they own"
  participant(p): "org.trade.com.Trader"
  operation: UPDATE
  resource(r): "org.trade.com.TradeAgreement"
  condition: (p.getIdentifier() ===  r.seller.getIdentifier())	
  action: ALLOW
}

rule TraderMakeApplication {
  description: "All customers can submit an InitialApplication transaction"
  participant: "org.trade.com.Trader"
  operation: CREATE
  resource: "org.trade.com.RequestLetterOfCredit"
  action: ALLOW
}

rule TraderCreateLOC {
  description: "All customers can create a LetterOfCredit asset"
  participant: "org.trade.com.Trader"
  operation: CREATE
  resource: "org.trade.com.LetterOfCredit"
  transaction: "org.trade.com.RequestLetterOfCredit"
  action: ALLOW
}

rule TraderViewLetterOfCredit {
	description: "All customers can view letters of credit they are involved with"
  	participant(p): "org.trade.com.Trader"
  	operation: READ
    resource(r): "org.trade.com.LetterOfCredit"
    condition: (p.getIdentifier() === r.applicant.getIdentifier() || p.getIdentifier() === r.benefitiary.getIdentifier())
  	action: ALLOW
}


rule BankEmployeeViewLetterOfCredit {
	description: "All bank employees can view letters of credit their bank is involved with"
  	participant(p): "org.trade.com.BankEmployee"
  	operation: READ
    resource(r): "org.trade.com.LetterOfCredit"
    condition: (p.bank.getIdentifier() === r.exportingBank.getIdentifier() || p.bank.getIdentifier() === r.issuingBank.getIdentifier())
  	action: ALLOW
}

rule TraderApproveApplication {
	description: "All customers can submit an Approve transaction for an LoC they are involved with"
  	participant(p): "org.trade.com.Trader"
  	operation: CREATE
    resource(r): "org.trade.com.ApproveLetterOfCredit"
    condition: (p.getIdentifier() === r.letter.applicant.getIdentifier() || p.getIdentifier() === r.letter.benefitiary.getIdentifier())
  	action: ALLOW
}

rule BankEmployeeApproveApplication {
	description: "All bank employees can submit an Approve transaction for an LoC their bank is involved with"
  	participant(p): "org.trade.com.BankEmployee"
  	operation: CREATE
    resource(r): "org.trade.com.ApproveLetterOfCredit"
    condition: (p.bank.getIdentifier() === r.letter.issuingBank.getIdentifier() || p.bank.getIdentifier() === r.letter.exportingBank.getIdentifier())
  	action: ALLOW
}

rule TraderCanMarkLocAsApproved {
	description: "All customers can add their approval to a Letter of Credit they are involved with"
  	participant(p): "org.trade.com.Trader"
  	operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
  	transaction(t): "org.trade.com.ApproveLetterOfCredit"
    condition: (p.getIdentifier() === r.applicant.getIdentifier() || p.getIdentifier() === r.benefitiary.getIdentifier())
  	action: ALLOW
}

rule BankEmployeeCanMarkLocAsApproved {
	description: "All bank employee can add their approval to a Letter of Credit their bank is involved with"
  	participant(p): "org.trade.com.BankEmployee"
  	operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
  	transaction(t): "org.trade.com.ApproveLetterOfCredit"
    condition: (p.bank.getIdentifier() === r.issuingBank.getIdentifier() || p.bank.getIdentifier() === r.exportingBank.getIdentifier())
  	action: ALLOW
}


rule BankEmployeeRejectApplication {
	description: "All bank employees can submit a Reject transaction for an LoC their bank is involved with"
  	participant(p): "org.trade.com.BankEmployee"
  	operation: CREATE
    resource(r): "org.trade.com.RequestLetterOfCredit"
    condition: (p.bank.getIdentifier() === r.letter.issuingBank.getIdentifier() || p.bank.getIdentifier() === r.letter.exportingBank.getIdentifier())
  	action: ALLOW
}


rule BankEmployeeMarksAsRejected {
	description: "All bank employees can update a LetterOfCredit their bank is involved with with a REJECTED status"
  	participant(p): "org.trade.com.BankEmployee"
  	operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
  	transaction(t): "org.trade.com.RequestLetterOfCredit"
    condition: (p.bank.getIdentifier() === r.issuingBank.getIdentifier() || p.bank.getIdentifier() === r.exportingBank.getIdentifier())
  	action: ALLOW
}

rule BeneficiaryShipProduct {
    description: "The beneficiary send a transaction to mark a letter of credit as relating to goods that have been shipped"
    participant(p): "org.trade.com.Trader"
    operation: CREATE
    resource(r): "org.trade.com.ShipProduct"
    condition: (p.getIdentifier() === r.letter.benefitiary.getIdentifier())
    action: ALLOW
}

rule BeneficiaryMarkAsShippedProduct {
    description: "The applicant can mark a letter of credit as relating to goods that have been shipped"
    participant(p): "org.trade.com.Trader"
    operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
    transaction(t): "org.trade.com.ShipProduct"
    condition: (p.getIdentifier() === r.benefitiary.getIdentifier())
    action: ALLOW
}

rule ApplicantReceiveProduct {
    description: "The applicant send a transaction to mark a letter of credit as relating to goods that have been received"
    participant(p): "org.trade.com.Trader"
    operation: CREATE
    resource(r): "org.trade.com.ReceiveProduct"
    condition: (p.getIdentifier() === r.letter.applicant.getIdentifier())
    action: ALLOW
}

rule ApplicantMarkAsReceivedProduct {
    description: "The applicant can mark a letter of credit as relating to goods that have been received"
    participant(p): "org.trade.com.Trader"
    operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
    transaction(t): "org.trade.com.ReceiveProduct"
    condition: (p.getIdentifier() === r.applicant.getIdentifier())
    action: ALLOW
}

rule IssuingBankMakingPayment {
    description: "The issuing bank employee can state the letter is ready for payment"
    participant(p): "org.trade.com.BankEmployee"
    operation: CREATE
    resource(r): "org.trade.com.MakePayment"
    condition: (p.bank.getIdentifier() === r.letter.issuingBank.getIdentifier())
    action: ALLOW
}

rule IssuingBankMarkAsMakingPayment {
    description: "The issuing bank employee can mark the letter as ready for payment"
    participant(p): "org.trade.com.BankEmployee"
    operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
    transaction(t): "org.trade.com.MakePayment"
    condition: (p.bank.getIdentifier() === r.issuingBank.getIdentifier())
    action: ALLOW
}

rule ExportingBankReceivesPayment {
    description: "The exporting bank employee can close the letter"
    participant(p): "org.trade.com.BankEmployee"
    operation: CREATE
    resource(r): "org.trade.com.PaymentReceived"
    condition: (p.bank.getIdentifier() === r.letter.exportingBank.getIdentifier())
    action: ALLOW
}

rule ExportingBankMarkasReceivesPayment {
    description: "The exporting bank employee can mark the letter as closed"
    participant(p): "org.trade.com.BankEmployee"
    operation: UPDATE
    resource(r): "org.trade.com.LetterOfCredit"
    transaction(t): "org.trade.com.PaymentReceived"
    condition: (p.bank.getIdentifier() === r.exportingBank.getIdentifier())
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule System {
    description: "Grant all full access to system resources"
    participant: "org.**"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}